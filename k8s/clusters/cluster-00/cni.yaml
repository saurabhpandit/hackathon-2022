---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUtVaVNCUy9lNW9wdUkxS2h1bjVYYVV3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1qTXdNakkzTlRaYQpGdzB5TlRBMk1qSXdNakkzTlRaYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURaTWhxRXBVbnlOMm5iOTdOeTBKU08KUXZXUC9WVnl5QkxnbVk2cm5tekZzY001MjdOZHJ3bWdEVEZuaXhJRWdVOUxsdFdobmNQZ0Q0bzBrVnZCQ0MwSQppQzh2MlFNWEt6YXdWSWFKZUM1YlZVTkF1NHJpY1FZQnkrb0NEcHBtRzVLeEtFR3AyTW9EMGs1RmVhbEQzT3RyCkxNT29xaXR2czV5cjJhRWRySU1EaldNVVpSaElRUEY3R0RVU0lTYllYL1hQNG5QblIwb3ZqK3p3eHZjb0dzYUQKRzhJMVZVRklGOHRGcVd0NitIc05saVRwREI0T2sxWjljalVGTzdoMnlhRE83QnorRVBJYmhqS0lHZFlpY3RwawpUaHlzUUtQUFl2M05kb0Y3REF6WUdsVDlKY0dReVlxVXdTYlR4emZnS2NYRTR2YjhCRnJzT0MvMXNiZHFMKzdSCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVU0cyVU04Vnd2MjlhbUpsSgpMWHIraTNGZXp6TXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQVRRZndaRzU2ZnduUWFndCtFcUZPQzhRTzdKClI0dzRJZU9IUTZTM2JQbER5dGFxSlpMcXhLY292R1hxY2JhS2l6R0dFeDl0OEI1b3RtZE5PY1o2ajQ4YlRBaDUKS0JDdWZtYkcwMVU0MHY1dEdCancvZmc4M2UvaVlWNnhhdGlrQUhpcFpUWkluTXNhWU5iNkxhN3B0djEvbWJubgpBUGdvZ2ZmVGh5K0YrUjdoYUlWZkRuNDJNelVlTTF0OG0zd2ErRG5VemlWNktWZEgwci9zbnRZRGhpcmtRdC9oCnE2TWEzOHZoZ05WdWpoVmxhQU9lM1hsMFVZUkFKQU51NkQyeFNTUkFRd2tBUjBhdWR0TEJWYmh4WHhFU0pKMkYKRkpQcDAza1hpQVErK2tDRStBWnRSYWdWOUdMSTFIU2lMSG8rL2h4Mm9qaE5rSjNOMWFaRXpTU0NycHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMlRJYWhLVko4amRwMi9lemN0Q1Vqa0wxai8xVmNzZ1M0Sm1PcTU1c3hiSERPZHV6ClhhOEpvQTB4WjRzU0JJRlBTNWJWb1ozRDRBK0tOSkZid1FndENJZ3ZMOWtERnlzMnNGU0dpWGd1VzFWRFFMdUsKNG5FR0FjdnFBZzZhWmh1U3NTaEJxZGpLQTlKT1JYbXBROXpyYXl6RHFLb3JiN09jcTltaEhheURBNDFqRkdVWQpTRUR4ZXhnMUVpRW0yRi8xeitKejUwZEtMNC9zOE1iM0tCckdneHZDTlZWQlNCZkxSYWxyZXZoN0RaWWs2UXdlCkRwTldmWEkxQlR1NGRzbWd6dXdjL2hEeUc0WXlpQm5XSW5MYVpFNGNyRUNqejJMOXpYYUJld3dNMkJwVS9TWEIKa01tS2xNRW0wOGMzNENuRnhPTDIvQVJhN0RndjliRzNhaS91MFFJREFRQUJBb0lCQUVRQWV1c0M4VWNEOElIdAphT0xPeVdSTk5LTXpkeGhyNmZVbVB0UWUwd0dHcVpBbzZGeXhtL3JmaHBOYnFIVitvdndRcXF4aVA5eWNJUEphCmZIYlFmNEVIV25iSnBEMFJ5NXFqckVmSU9BTmlpNTd0MlFzU3hnV3orWDFSWXlnTEEvK3hrZldDcWFWT3FERDYKYVhPVTdLUnVySWZYVjZndWZTUVZER3ZGQW5RT3NhTkUwSGQ4b1ZZMkNDRjE3QnJTamRQTWt0VzZaTG5JUGtmZQpHdHZ0ckNSKzJWakdNSEI2VXhlNndYL1UwSUhsMHZ5NUxESkxVenlCSEhpNWVKZlZIbVdRQzNTQ3NEYUJXU2J0CmpLTnhTK0djSzNERmRpeHl4MkprdWNZMDNySGlOUXIraG5jNkJSVm9QZnBQT2RvR1F0S3pIQ0ZibDZ1ajQwZlEKSHl0QU1wRUNnWUVBOXEvS1N0dlFwNzlEUzd0NmxRQ09ScXAra1JtV0hhNmVZaklHdXo0cDBaT2pIa3BZcm9qMgpkUGcwRk9NbVNyVmh6cnp2NGdaQmsyZGdTemdZNWVoRTkvbUxPMDhrbHhNclNyZVFnYmtzREoyOXlPSzF1aFFvCklBc3pkNFZtNktVWlZHWEFMa0ZzaFFwRVhndDhBUmY3L0R1UzBVazNKdGs0YWlDVG8wSXAyQzBDZ1lFQTRXVkoKQmlNRzl6NG5abTU5K2pqemJKNUszUGtyUDRwTkZGRzZqRnczaStWWE5Mak03SDRMYS9YdFMySE90MXFDSndGYQpLdVdVT3BYMXA2ZUNKa1M4di9TNXlYd2twdCtRTWlIU3FIT0lhWTRlNFZTNmtxeGIzalN4VFVVTVh2MklMdXoyCjE5SDFady82cWk4THE2VE9xNWdKTHp5bnI5K0FzTmExbllwQjA3VUNnWUJiL1l2TFJKTlhxcHcyeG8vY3RwdFgKd01aMzUzbXlVZWFnS1pXWEI0UmlzZEozUGpRNXlidFdQU1IyMFluNi9BNmdJSmEzeTZ0eWcyOUdQWUlUWWYwdQpGN0dUQ1YxVXRRSkUxNVVjdXVleFFMV0FEd0xEaERhK1ZFNzUrQlk3RlM0UDZlMnpraFFjdklwb0k1STNlakV1Cml5eWh2TkxET3VldHM3NDZlRGJRZFFLQmdRRFZ6eGF1VTV2UC9ZMnloUzNMcHlxQzVzVnRTSS9WL29PUHV0ZVQKUGdjVEZjTGJxRkg4SkxVQS9KRFU2VHNHZ3p6amMwenRWRXFBS0xDWEVUZE14ZmVtdjZkZGtmM1NybEJDdmdMdQorR2wyZC9LakhaUytmZkhIbjRSeElBYlVOUHh5UnljQkk1SCs2aEdHVG9wcmtETGNZNlNTd3A3dkhyMGRBdy9WCkdjbkg0UUtCZ1FES1ZzU3ZGdjYzMjU4S0RLOGpuR3c3RHE4ZWdsNW5FL2wwYjZDdW5EQzRnTzZUeXhyUVRRMUQKeXZ2Q3VRTmVROHZycEFkZWtldmlLTnVpblFjZmxJejFxeFY2VkNEMDB4ckNENlB2WFJxSmY5UC83OXh4RW1mVgpYZitWcUkvRWcySkcwK3R5bWNkR3VTK1JuZzhaTUp6Z3hBWnVwNnhXTFdrcjlvZHgyb0RpdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUtVaVNCUy9lNW9wdUkxS2h1bjVYYVV3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1qTXdNakkzTlRaYQpGdzB5TlRBMk1qSXdNakkzTlRaYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURaTWhxRXBVbnlOMm5iOTdOeTBKU08KUXZXUC9WVnl5QkxnbVk2cm5tekZzY001MjdOZHJ3bWdEVEZuaXhJRWdVOUxsdFdobmNQZ0Q0bzBrVnZCQ0MwSQppQzh2MlFNWEt6YXdWSWFKZUM1YlZVTkF1NHJpY1FZQnkrb0NEcHBtRzVLeEtFR3AyTW9EMGs1RmVhbEQzT3RyCkxNT29xaXR2czV5cjJhRWRySU1EaldNVVpSaElRUEY3R0RVU0lTYllYL1hQNG5QblIwb3ZqK3p3eHZjb0dzYUQKRzhJMVZVRklGOHRGcVd0NitIc05saVRwREI0T2sxWjljalVGTzdoMnlhRE83QnorRVBJYmhqS0lHZFlpY3RwawpUaHlzUUtQUFl2M05kb0Y3REF6WUdsVDlKY0dReVlxVXdTYlR4emZnS2NYRTR2YjhCRnJzT0MvMXNiZHFMKzdSCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVU0cyVU04Vnd2MjlhbUpsSgpMWHIraTNGZXp6TXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQVRRZndaRzU2ZnduUWFndCtFcUZPQzhRTzdKClI0dzRJZU9IUTZTM2JQbER5dGFxSlpMcXhLY292R1hxY2JhS2l6R0dFeDl0OEI1b3RtZE5PY1o2ajQ4YlRBaDUKS0JDdWZtYkcwMVU0MHY1dEdCancvZmc4M2UvaVlWNnhhdGlrQUhpcFpUWkluTXNhWU5iNkxhN3B0djEvbWJubgpBUGdvZ2ZmVGh5K0YrUjdoYUlWZkRuNDJNelVlTTF0OG0zd2ErRG5VemlWNktWZEgwci9zbnRZRGhpcmtRdC9oCnE2TWEzOHZoZ05WdWpoVmxhQU9lM1hsMFVZUkFKQU51NkQyeFNTUkFRd2tBUjBhdWR0TEJWYmh4WHhFU0pKMkYKRkpQcDAza1hpQVErK2tDRStBWnRSYWdWOUdMSTFIU2lMSG8rL2h4Mm9qaE5rSjNOMWFaRXpTU0NycHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRTlAvbDNFcXNZR09ZRVNBWWszWGN5VEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeU16QXlNamMxTmxvWApEVEkxTURZeU1qQXlNamMxTmxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxjZTFON00KZkxsME5sSEF3b0RjWTZqQ0o4Tm0vaWhTODBEVkJuRWljdTFBUVk5V1FzbEdVNTJSMTZFQkg1cU9zN0h6NnF0MApMSVd2TytWUTNZS3oxTlcxbTFxQytyMnJENHgwVDY3NS9Ja3pNWXBHTHpwV3FZZ0k3V3hZTzgvSXFiMFc1ZnZoCnYxWjFtcFA2KzZvdzd0TFQvY2d1ejc5clNqWnlVVmpZNEI0MnlFa2VYcHJnRVRmbU9HbVZ2ZnRUT3dLOFdRVFQKcy9pWiswZW1jVWI5aGt3bWgyZ28yUERQa0VVZkFoM2Jxd2tUS0Q4SlZoYld2UGl2d2VNbzV2MnRZMVNzeTg1MAp1MzNQOURMdmZWSVpVL0pCd0w1ZFZtTyszaTUyb2daMG90dUIrVVdsUVJnVFgxa0NSVXd3ZFVYVjdiN2p1TVRHClBEenNoU1VQbTJiVG1nY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQpTRzJVTThWd3YyOWFtSmxKTFhyK2kzRmV6ek13S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWwrWVJJOHNRdkxPNS81K2cKaFNTdGhQVDNiV2lzWWZTTHg3S1ppQUR1dWR5eFVZTG4wa1ZHelM3Z01INDd2UXJ3TncyWWVlQUNWV3JLN0hSYQozcEEycUd0VzE1ajlKVUJ0cmNNdmFhdVRzeVFwNDBRSklmRFdIRTI3OWZPU2NIeDhWUzVHT3RXRGpyNHNHUWN3ClJSamZTNTZlcEc5Y2Iwd0FWci9IOUlZUEgzQU02dEgxMWRlMjBwM0dYN2xBY2JETzF3Q0lnM1MyTlZRdXFmbjcKeW4xejYvNyt6emNEbXhwN09kYk5vbW8yMnBLaVoxK29LeXZIVktOV1pNcnBkNGl5UWRRZWErR3dlSVVlekR0RQo0bGhCeGhwSE1BZUFNUGdNUEthVnc4R2VMTXJQUksvZnJvVHY1ajJ6L0RJcHZ4dFliYVBvMUQwWjExaGtWaTRyCmhuU0xWdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBdHg3VTNzeDh1WFEyVWNEQ2dOeGpxTUludzJiK0tGTHpRTlVHY1NKeTdVQkJqMVpDCnlVWlRuWkhYb1FFZm1vNnpzZlBxcTNRc2hhODc1VkRkZ3JQVTFiV2JXb0w2dmFzUGpIUlBydm44aVRNeGlrWXYKT2xhcGlBanRiRmc3ejhpcHZSYmwrK0cvVm5XYWsvcjdxakR1MHRQOXlDN1B2MnRLTm5KUldOamdIamJJU1I1ZQptdUFSTitZNGFaVzkrMU03QXJ4WkJOT3orSm43UjZaeFJ2MkdUQ2FIYUNqWThNK1FSUjhDSGR1ckNSTW9Qd2xXCkZ0YTgrSy9CNHlqbS9hMWpWS3pMem5TN2ZjLzBNdTk5VWhsVDhrSEF2bDFXWTc3ZUxuYWlCblNpMjRINVJhVkIKR0JOZldRSkZUREIxUmRYdHZ1TzR4TVk4UE95RkpRK2JadE9hQndJREFRQUJBb0lCQUN0RWVLMndDV1JVWmlWSQo4Mnc1SnI4UUtROE5mYzRQVTNTbElPR0liemxKcm5Qc3dOa0g2ZWZZTnVmTytTV3V4Qnl1OG1yU2gxYUxBZzc3CjNXcnRqTU4ySnAvclJNMmQ1bzJjU2R1aEs1OUxYbEE2cHh3VXIvZjVqQWZHalZOYUtXa0pTUXdMMmdiV3dOQm8KUkNDQmNWeVZSR2lSVHZyK29jbGRsNFR6c1hqUnVITEhZaXh5RGJUb3FPY2c1THg3VEdPZ3hLaG9kK1FIQTVpNwpMaXR0SlNtMlZFUDRFY1g0aHFjblZEV1hOL3ZmYU9ieXQyS0xDUitTVW9rOVFFeGlSVXRPc3pDYjFIY1VQMEhNCjh2TkNQNXpZUUR4UkFzTGk3R2RMSG5aQ1NTTUs0UExYRENPQ0dTZE5aeUFXZWs1UmlpRUlPR0E4OTlCek5HWUkKbUp3akgya0NnWUVBNHBxWXhYbXJhZmRoSllEUTNxV1pUZE1RYXRyN2NPbDBhMlJyRmovZDhGd2swMjNBdVhRaApyeDBqUHhxcUJ1UFh0WmNXd1JjRWdtV0F1YktqSXhhMVNOd3FreHlkR01MV1RWZFQ5MlRLdWQwNWNzc0d3bGZBCml3aEFMZWFFWHArZmFyZWNtRWx6V3pEN3Y0b3BTSGd6aXlFWEw5WDE3RytRa2MyOWZUbWhlL1VDZ1lFQXp1QXIKcmtLMmFWYi9XVDJNbFM2Y1ZnejhEb3dHNlNINmVCR3NubXRWLysxbktUeFFsZU96MWxsMjR4WU16RkVtelk5dgp6ckV2L083aFM5QXRRb2NmZlA0ZkZpdW1sV2d2NDExWkpwbHJjOXU3L2FsQTc3eFl6T05sMG52Z3ZIL3VVKy9CClcwL1dGUGFBcDUvSHIyVFc5MjNkMWxoaDE5ck1xMHBHNmp5c25Jc0NmM2hocU1jLzI5QnZteXhSUXFVRlZHd0QKdExVUG9JUmJnWDJMMjFmMmxmRWJBblZQMlJLc256aG9RbEZEMlEvUCtzaDllNWtZb1V5a243NEhLS043Yk5OSQpJMVlEM1hGS0VJOEYxWldYOWhySGE3MlFIZ2NnbHlsRk9OTXBveWlocEE4TmZDTnE0ZDJRS0MyWk9GVkhoaHBqCmVlM3Z2TFhlanU3bVhjUW8yYUVDZ1lFQW1VYTBkbmVOU1gwZzBsRHRFVGNvdEFVSTJBcGRzR3Z4ZFBhN2ErRGgKSmk4U2FSWDhLeUk3ZzR4anJwc092bTgrRGIzQnZHWEJ4V2lFV3JTU1pDRlRianVtY3JuQ3doNGdwUmZyenRLTApMNXRWclBxelZ5eTRxbzJ0U29kb0dxRzZ4a3YwZWlBcjRQcEdsbXVtK3NmL0VmSkFFK2tHRFhWYWdXc1dJY1QwCnEwTUNnWUJpUy95ZENFTjJPRWZhRE9YTVN5U1FBZDBmcmV4WEpOS25FN284dHd2VXZDOHU4UVRzWFdXVy9CR0oKMnE3dTZNZXBTbW5EU3VQc0pXOGw5NUlCam5aTUtDOTYwZnNuL1VVdE4zZ3Z6VGxIbzNYUjljVmd6WWU5MXVkTgppeHdnR0NTZ0pDaTc1SXVRSEVmQW1nRXkxVDBIS2JKOEx3cm12WU16QjVJR1ZNRC9Odz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 4254
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.5"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.96.92.88"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.5"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.5"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.96.92.88"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.5
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.96.92.88"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
